name: Test known issues

on:
  workflow_run:
    workflows: ["Docker Synapse"]
    types:
      - completed

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    container: rustlang/rust:nightly-slim

    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: synapse
          POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      synapse:
        image: ghcr.io/mtrnord/matrix-fuzz:synapse
        # Set health checks to wait until synapse has started
        options: >-
          --health-retries 50
          --health-interval 30s
          --health-timeout 30s
        ports:
          - 8008:8008

    steps:
      - uses: actions/checkout@v3
      - name: Install deps
        run: |
          apt-get update
          apt-get install -y python3 jq curl
          apt-get clean
      - name: Register get_nonce
        id: get_nonce
        run: echo "::set-output nonce=$(curl http://localhost:8008/_synapse/admin/v1/register | jq -r .nonce)"
      - name: Generate mac
        id: generate_mac
        run: python3 ./dockerfiles/synapse_generate_mac.py
        env:
          NONCE: ${{ steps.get_nonce.outputs.nonce }}
      - name: Register
        run: 'curl -X POST http://localhost:8008/_synapse/admin/v1/register -d ''{"mac": "${MAC}", "nonce": "${NONCE}", "username": "fuzzer", "password": "Chu8chool0dooqueiwo0lohviegho6ieveuNg3Ohcio2aekaiw0ioF6waifo8eep"}'''
        env:
          MAC: ${{ steps.generate_mac.outputs.hmac }}
          NONCE: ${{ steps.get_nonce.outputs.nonce }}
      - name: Run tests
        run: cargo test
        env:
          MATRIX_USERNAME: "fuzzer"
          MATRIX_PASSWORD: "Chu8chool0dooqueiwo0lohviegho6ieveuNg3Ohcio2aekaiw0ioF6waifo8eep"
